{"version":3,"sources":["index.js"],"names":["noise","SimplexNoise","AppContainer","styled","div","_templateObject","StyedDatGui","DatGui","_templateObject2","map","x","in_min","in_max","out_min","out_max","StyledOpciones","props","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","data","params","onUpdate","react_dat_gui__WEBPACK_IMPORTED_MODULE_9__","path","label","min","max","step","_templateObject3","ContentArea","_templateObject4","CanvasContainer","_templateObject5","HeaderComment","p","_templateObject6","Line","opts","lineNumber","ly","offsety","numSegmentos","segmentWidth","w","fulld","Array","fill","_","i","segmentNumber","rval","noise2D","h","p1","p2","midpoint","chaosX","chaosY","s","Object","_Users_hugo_WorkingSpace_javascript_line_patterns_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","str","concat","reduce","prev","cur","curIndex","stroke","lineColor","strokeWidth","d","Canvas","numLineas","lineas","width","height","viewBox","l","rootElement","document","getElementById","ReactDOM","render","_useState","useState","_useState2","_Users_hugo_WorkingSpace_javascript_line_patterns_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setParams","useEffect","sourceSVG","targetCanvas","svg_xml","XMLSerializer","serializeToString","ctx","getContext","clearRect","img","Image","src","btoa","onload","drawImage","importSVG","querySelector","onClick","svgEl","name","setAttribute","svgData","outerHTML","svgBlob","Blob","type","svgUrl","URL","createObjectURL","downloadLink","href","download","body","appendChild","click","removeChild","saveSvg","alt","id"],"mappings":"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","file":"static/js/main.7fc1c3a0.chunk.js","sourcesContent":["import \"react-dat-gui/build/react-dat-gui.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport \"./styles.css\";\nimport SimplexNoise from \"simplex-noise\";\nimport DatGui, { DatColor, DatNumber } from \"react-dat-gui\";\nconst noise = new SimplexNoise();\n\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  grid-template-rows: 1fr;\n  grid-column-gap: 0px;\n  grid-row-gap: 0px;\n`;\n\nconst StyedDatGui = styled(DatGui)`\n  position: relative !important;\n  display: inline-block !important;\n  right: 0 !important;\n`;\n\nfunction map(x, in_min, in_max, out_min, out_max) {\n  return ((x - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n}\n\nfunction importSVG(sourceSVG, targetCanvas) {\n  // https://developer.mozilla.org/en/XMLSerializer\n  let svg_xml = new XMLSerializer().serializeToString(sourceSVG);\n  var ctx = targetCanvas.getContext(\"2d\");\n  ctx.clearRect(0, 0, 1000, 1000);\n\n  // this is just a JavaScript (HTML) image\n  var img = new Image();\n  // http://en.wikipedia.org/wiki/SVG#Native_support\n  // https://developer.mozilla.org/en/DOM/window.btoa\n  img.src = \"data:image/svg+xml;base64,\" + btoa(svg_xml);\n\n  img.onload = function() {\n    // after this, Canvasâ€™ origin-clean is DIRTY\n    ctx.drawImage(img, 0, 0);\n  };\n}\n\nfunction saveSvg(svgEl, name) {\n  svgEl.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n  var svgData = svgEl.outerHTML;\n  var preface = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n';\n  var svgBlob = new Blob([preface, svgData], {\n    type: \"image/svg+xml;charset=utf-8\"\n  });\n  var svgUrl = URL.createObjectURL(svgBlob);\n  var downloadLink = document.createElement(\"a\");\n  downloadLink.href = svgUrl;\n  downloadLink.download = name;\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n  document.body.removeChild(downloadLink);\n}\n\nconst PanelOpciones = props => {\n  return (\n    <StyedDatGui data={props.params} onUpdate={props.onUpdate}>\n      <DatNumber\n        path=\"numLineas\"\n        label=\"Line Count\"\n        min={1}\n        max={100}\n        step={1}\n      />\n      <DatNumber\n        path=\"numSegmentos\"\n        label=\"Segments\"\n        min={1}\n        max={100}\n        step={1}\n      />\n      <DatColor path=\"lineColor\" label=\"Stroke\" />\n      <DatNumber\n        path=\"strokeWidth\"\n        label=\"Stroke width\"\n        min={0.1}\n        max={1.0}\n        step={0.05}\n      />\n      <DatNumber path=\"chaosX\" label=\"X noise\" min={0} max={1.0} step={0.05} />\n      <DatNumber path=\"chaosY\" label=\"Y noise\" min={0} max={1.0} step={0.05} />\n    </StyedDatGui>\n  );\n};\n\nconst StyledOpciones = styled(PanelOpciones)`\n  grid-area: 1 / 2 / 2 / 3;\n  background-color: black;\n  height: 100%;\n`;\n\nconst ContentArea = styled.div`\n  overflow: auto;\n  background-color: white;\n  grid-area: 1 / 1 / 2 / 2;\n  text-align: center;\n`;\n\nconst CanvasContainer = styled.div`\n  display: inline-block;\n  width: 500px;\n  height: 500px;\n`;\n\nconst HeaderComment = styled.p`\n  width: 100%;\n  background-color: royal-blue;\n  color: white;\n`\n\n/**\n * Pinta una linea\n */\nconst Line = opts => {\n  const lineNumber = opts.lineNumber;\n  const ly = lineNumber * opts.offsety;\n  //Dividir en n segmentos, trazar linea desde 0, 0.5 del segmento\n  // a un punto aleatorio en la mitad y luego de dicho punto a 1, 0.5\n  let numSegmentos = opts.numSegmentos;\n  let segmentWidth = opts.w / numSegmentos;\n\n  let segmentos = Array(numSegmentos)\n    .fill()\n    .map((_, i) => {\n      const segmentNumber = i;\n      const rval = noise.noise2D(lineNumber, segmentNumber);\n      return {\n        w: segmentWidth,\n        h: opts.offsety,\n        i: i,\n        p1: [segmentWidth * i, ly],\n        p2: [segmentWidth * i + segmentWidth, ly],\n        midpoint: [\n          //mapear de rango -1,1\n          map(\n            rval,\n            -1,\n            1,\n            -segmentWidth * opts.chaosX,\n            segmentWidth * opts.chaosX\n          ),\n          map(\n            rval,\n            -1,\n            1,\n            -opts.offsety * opts.chaosY,\n            opts.offsety * opts.chaosY\n          )\n        ]\n      };\n    })\n    .map(s => {\n      return {\n        ...s,\n        str: `M${s.p1[0]} ${s.p1[1]} l${s.midpoint[0]} ${s.midpoint[1]} L${\n          s.p2[0]\n        } ${s.p2[1]}`\n      };\n    });\n\n  const d = ``;\n\n  let fulld = segmentos.reduce((prev, cur, curIndex) => {\n    return `${prev || \"\"} ${cur.str} `;\n  }, d);\n\n  return (\n    <path\n      stroke={opts.lineColor}\n      strokeWidth={opts.strokeWidth}\n      fill=\"none\"\n      d={fulld}\n    />\n  );\n};\n\nconst Canvas = opts => {\n  let numLineas = opts.numLineas;\n  let w = 100;\n  let h = 100;\n  let lineas = Array(numLineas)\n    .fill()\n    .map(_ => {\n      return 1;\n    });\n\n  const offsety = w / numLineas;\n  return (\n    <CanvasContainer>\n      <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${w} ${h}`}>\n        {lineas.map((l, i) => {\n          return (\n            <Line\n              offsety={offsety}\n              w={w}\n              lineNumber={i}\n              numSegmentos={opts.numSegmentos}\n              lineColor={opts.lineColor}\n              strokeWidth={opts.strokeWidth}\n              chaosX={opts.chaosX}\n              chaosY={opts.chaosY}\n            />\n          );\n        })}\n      </svg>\n    </CanvasContainer>\n  );\n};\nfunction App() {\n  const [params, setParams] = useState({\n    numLineas: 40,\n    strokeWidth: 0.2,\n    lineColor: \"black\",\n    numSegmentos: 50,\n    chaosX: 0.5, //Influye en la direcciÃ³n de los segumentos\n    chaosY: 0.95 //Influye en la direcciÃ³n de los segumentos\n  });\n\n  useEffect(() => {\n    importSVG(document.querySelector(\"svg\"), document.querySelector(\"#canvas\"));\n  });\n  const exportFile = () => {\n    saveSvg(document.querySelector(\"svg\"), \"pattern.svg\");\n  };\n\n  return (\n    <AppContainer>\n      <StyledOpciones params={params} onUpdate={setParams} />\n      <ContentArea>\n        <HeaderComment> Create wavy line fill patterns </HeaderComment>\n        <h1>\n          SVG <button onClick={exportFile}>Export SVG</button>{\" \"}\n        </h1>\n        <Canvas\n          numLineas={params.numLineas}\n          strokeWidth={params.strokeWidth}\n          lineColor={params.lineColor}\n          numSegmentos={params.numSegmentos}\n          chaosX={params.chaosX}\n          chaosY={params.chaosY}\n        />\n        <h1>PNG</h1>\n        <CanvasContainer>\n          <canvas alt=\"pattern\" id=\"canvas\" width=\"500px\" height=\"500px\" />\n        </CanvasContainer>\n      </ContentArea>\n    </AppContainer>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}